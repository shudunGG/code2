# ======================================================================================
# 应用主配置文件
# 子配置文件以application-{profile(环境标识)}.properties的形式存在
# 通过spring.profiles.active设定不同的环境标识，应用根据环境标识自动加载不同环境所需的配置文件
# ##
# 这里的配置在普通应用与微服务应用模式下基本都是通用的，子配置文件中相同的配置项会覆盖这里的
# 如果有参数必须在微服务应用模式下才能生效，可以在application-micro.properties文件中单独配置
# 如果有参数必须在普通应用模式下才能生效，可以新增application-normal.properties文件来单独配置
# ======================================================================================

############################# 基础配置 #############################
# 应用名称
application.name=DCockpitNode
spring.application.name=${application.name}

# 应用环境标识，由pom.xml中profiles配置设定，区分普通应用normal与微服务应用micro
spring.profiles.active=normal

# 自动装配扫描包路径，系统默认会扫描com.epoint所在包及其子包路径，这里可配置额外的路径，多个以逗号隔开如com.test,com.test2
spring.component-scan.base-packages=
# 要排除的自动配置类全路径(多个以逗号隔开)，也可以通过自动配置类上的开关属性(如果有)来控制
# 有相关依赖包的情况下spring-boot-autoconfigure.jar\META-INF\spring.factories中的自动配置类可能会生效，如果不用自动配置能力建议配置排除掉
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration,org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration

# 关闭默认启用的无用配置
spring.jmx.enabled=false
spring.mvc.favicon.enabled=false


############################# 链路追踪相关配置 #############################
# 是否启用链路追踪(方案brave+zipkin)(true:启用、false:不启用)
epoint.zipkin.brave.trace.enabled=false
# 选择一种链路追踪数据上报的方式(可选okhttp:基于Okhttp3直连Zipkin、rabbitmq:基于消息中间件RabbitMQ中转至Zipkin)
epoint.zipkin.brave.sender.type=rabbitmq
# 链路追踪数据发送至目标(Zipkin)服务器的地址(ip:port)，适用于上报方式Okhttp
epoint.brave.sender.zipkin.addresses=127.0.0.1:9411
# 指定目标(RabbitMQ)服务器中链路追踪数据传输的队列，适用于上报方式消息中间件RabbitMQ
epoint.brave.sender.rabbitmq.queue=zipkin

# 链路追踪数据发送至目标(RabbitMQ)服务器的基本连接信息
spring.rabbitmq.addresses=127.0.0.1:5672
spring.rabbitmq.username=epoint
spring.rabbitmq.password=epoint
# 是否启用SSL加密通信，注意启用SSL时上面端口要修改为5671
spring.rabbitmq.ssl.enabled=false
# 启用SSL时配置证书和密钥，证书放在src/main/resources目录下
# 相关信息参见基础设施部门发布的说明https://fdoc.epoint.com.cn:3366/middleware/RabbitMQ/RabbitMQ_configure.html
spring.rabbitmq.ssl.keyStore=rabbitmq-epointclient.keycert.p12
spring.rabbitmq.ssl.trustStore=rabbitmq.store
spring.rabbitmq.ssl.keyStorePassword=p@ssw0rd
spring.rabbitmq.ssl.trustStorePassword=p@ssw0rd
spring.rabbitmq.ssl.verifyHostname=false

# 链路追踪数据采样频率(可设置区间为:[0.01f, 1.0]，1代表100%)
epoint.brave.sampler.rate=1

#xxljob配置信息
#执行器注册中心地址[选填]，为空则关闭自动注册
epoint.job.registry.addresses=
#执行器组AppName，执行器可能存在多个作为高可用，所有的这些高可用执行器节点作为一个执行器组 。这个名称会在注册的时候使用，所有的高可用执行节点配置相同的执行器组名称，告诉调度端是高可用节点
epoint.job.executor.appname=
#执行器IP
epoint.job.executor.ip=
#执行器端口号
epoint.job.executor.port=
#访问令牌[选填]，非空则进行匹配校验
epoint.job.accessToken=abcdefg
#执行器日志路径[选填]，为空则使用默认路径
epoint.job.executor.logpath=./data/applogs/xxl-job/jobhandler
#日志保存天数[选填]，值大于3时生效
epoint.job.executor.logretentiondays=-1
epoint.job.executor.cpuMax=0.9
epoint.job.executor.memoryMax=0.9
#统一调度请求超时时间
epoint.job.executor.timeout=3000