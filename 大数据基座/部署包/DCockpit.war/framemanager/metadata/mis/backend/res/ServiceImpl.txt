{@PackageName};

import java.util.List;
import java.util.Map;
import com.epoint.database.peisistence.crud.impl.model.PageData;
import org.springframework.stereotype.Component;

import {@IServicePackage};
import {@DomainClassPackage};

/**
 * {@BeanChineseName}对应的后台service实现类
 * 
 * @author {@Author}
 * @version [版本号, {@GenerateDate}]
 */
@Component
public class {@ServiceClassName}Impl implements {@IServiceClassName}
{
    /**
     * 插入数据
     * 
     * @param record
     *            BaseEntity或Record对象 <必须继承Record>
     * @return int
     */
    @Override
    public int insert({@TableBeanName} record) {
        return new {@ServiceClassName}().insert(record);
    }

    /**
     * 删除数据
     * 
     * @param guid
     *            主键guid
     * @return int
     */
    @Override
    public int deleteByGuid(String guid) {
        return new {@ServiceClassName}().deleteByGuid(guid);
    }

    /**
     * 更新数据
     * 
     * @param record
     *            BaseEntity或Record对象 <必须继承Record>
     * @return int
     */
    @Override
    public int update({@TableBeanName} record) {
        return new {@ServiceClassName}().update(record);
    }

    /**
     * 查询数量
     * 
     * @param conditionMap
     *            查询条件集合
     * @return Integer
     */
    @Override
    public Integer count{@TableBeanName}(Map<String, Object> conditionMap) {
        return new {@ServiceClassName}().count{@TableBeanName}(conditionMap);
    }

    /**
     * 根据ID查找单个实体
     * 
     * @param primaryKey
     *            主键
     * @return T extends BaseEntity
     */
    @Override
    public {@TableBeanName} find(Object primaryKey) {
       return new {@ServiceClassName}().find(primaryKey);
    }

    /**
     * 查找单条记录
     * 
     * @param conditionMap
     *            查询条件集合
     * @return T {String、Integer、Long、Record、FrameOu、Object[]等}
     */
    @Override
    public {@TableBeanName} find(Map<String, Object> conditionMap) {
        return new {@ServiceClassName}().find(conditionMap);
    }

    /**
     * 查找一个list
     * 
     * @param conditionMap
     *            查询条件集合
     * @return T extends BaseEntity
     */
    @Override
    public List<{@TableBeanName}> findList(Map<String, Object> conditionMap) {
       return new {@ServiceClassName}().findList(conditionMap);
    }

    /**
     * 分页查找一个list
     * 
     * @param conditionMap
     *            查询条件集合
     * @param pageNumber
     *            记录行的偏移量
     * @param pageSize
     *            记录行的最大数目
     * @return T extends BaseEntity
     */
    @Override
    public PageData<{@TableBeanName}> paginatorList(Map<String, Object> conditionMap, int pageNumber, int pageSize) {
       return new {@ServiceClassName}().paginatorList(conditionMap, pageNumber, pageSize);
    }

}
