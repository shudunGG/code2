<?xml version="1.0" encoding="UTF-8"?>
<configuration packages="com.epoint.core.utils.log">
	<appenders>
		<!-- [控制台日志、正式环境会输出到wrapper.log] -->
		<Console name="Console" target="SYSTEM_OUT">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
		</Console>

		<!-- 按钮点击日志 -->
		<RollingFile name="BUTTON_LOG" fileName="${sys:epoint.root}/button.log"
			filePattern="${sys:epoint.root}/button.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="button.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>

		<!-- 工作流日志 -->
		<RollingFile name="WORKFLOW_LOG" fileName="${sys:epoint.root}/workflow.log"
			filePattern="${sys:epoint.root}/workflow.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="workflow.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>
		
		<!-- quartz日志 -->
		<RollingFile name="DXPNODEDETAILCHECKJOB_LOG" fileName="${sys:epoint.root}/dxpnodedetailcheckjob.log"
			filePattern="${sys:epoint.root}/dxpnodedetailcheckjob.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="dxpnodedetailcheckjob.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>
		<RollingFile name="DXPTRANSCOUNTMERGERJOB_LOG" fileName="${sys:epoint.root}/dxptranscountmergerjob.log"
			filePattern="${sys:epoint.root}/dxptranscountmergerjob.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="dxptranscountmergerjob.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>
		<RollingFile name="DXPEXECUTECOUNTJOB_LOG" fileName="${sys:epoint.root}/dxpexecutecountjob.log"
			filePattern="${sys:epoint.root}/dxpexecutecountjob.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="dxpexecutecountjob.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>
		<RollingFile name="DXPMSMQCOUNTTASK_LOG" fileName="${sys:epoint.root}/dxpmsmqcounttask.log"
			filePattern="${sys:epoint.root}/dxpmsmqcounttask.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="dxpmsmqcounttask.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>
		<RollingFile name="DXPKAFKATOPICPUBLISHCOUNTJOB_LOG" fileName="${sys:epoint.root}/dxpkafkatopicpublishcountjob.log"
			filePattern="${sys:epoint.root}/dxpkafkatopicpublishcountjob.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="dxpkafkatopicpublishcountjob.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>
		<RollingFile name="DXPKAFKAGROUPCONSUMECOUNTJOB_LOG" fileName="${sys:epoint.root}/dxpkafkagroupconsumecountjob.log"
			filePattern="${sys:epoint.root}/dxpkafkagroupconsumecountjob.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="dxpkafkagroupconsumecountjob.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>
		<RollingFile name="DXPMONITORTASK_LOG" fileName="${sys:epoint.root}/dxpmonitortask.log"
			filePattern="${sys:epoint.root}/dxpmonitortask.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="dxpmonitortask.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>
		<RollingFile name="DXPALARMTASK_LOG" fileName="${sys:epoint.root}/dxpalarmtask.log"
			filePattern="${sys:epoint.root}/dxpalarmtask.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="dxpalarmtask.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>
		<RollingFile name="CHECKTABLETIGGERJOB_LOG" fileName="${sys:epoint.root}/checktabletiggerjob.log"
			filePattern="${sys:epoint.root}/checktabletiggerjob.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="checktabletiggerjob.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>
		
		<!-- xxljobexecute日志 -->
		<RollingFile name="XXLJOBEXECUTE_LOG" fileName="${sys:epoint.root}/xxljobexecute.log"
			filePattern="${sys:epoint.root}/xxljobexecute.%d{yyyy-MM-dd}">
			<PatternLayout pattern="#### %d{yyyyMMdd HH:mm:ss,SSS} | %l | %p |  %m %n" />
			<Policies>
				<TimeBasedTriggeringPolicy />
			</Policies>
			<DefaultRolloverStrategy>
				<EpointDelete basePath="${sys:epoint.root}" maxDepth="1">
					<IfFileName glob="xxljobexecute.*" />
					<IfLastModified age="180d" />
				</EpointDelete>
			</DefaultRolloverStrategy>
		</RollingFile>
	</appenders>

	<loggers>
		<!-- 工作流日志控制器 additivity指示是否遵循缺省的继承机制：若是additivity设为false，则子Logger只会在自己的appender里输出，而不会在父Logger的appender里输出 -->
		<AsyncLogger name="com.epoint.workflow.bizlogic" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="WORKFLOW_LOG" />
		</AsyncLogger>
		
		<!-- 按钮点击日志控制器 additivity指示是否遵循缺省的继承机制：若是additivity设为false，则子Logger只会在自己的appender里输出，而不会在父Logger的appender里输出 -->
		<AsyncLogger name="com.epoint.frame.util.ButtonLog" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="BUTTON_LOG" />
		</AsyncLogger>
		
		<!-- quartz日志控制器 additivity指示是否遵循缺省的继承机制：若是additivity设为false，则子Logger只会在自己的appender里输出，而不会在父Logger的appender里输出 -->
		<AsyncLogger name="com.epoint.dxp.node.task.DxpNodeDetailCheckJob" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="DXPNODEDETAILCHECKJOB_LOG" />
		</AsyncLogger>
		<AsyncLogger name="com.epoint.dxp.transcount.task.DxpTransCountMergerJob" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="DXPTRANSCOUNTMERGERJOB_LOG" />
		</AsyncLogger>
		<AsyncLogger name="com.epoint.dxp.executecount.task.DxpExecutecountJob" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="DXPEXECUTECOUNTJOB_LOG" />
		</AsyncLogger>
		<AsyncLogger name="com.epoint.dxp.msmq.task.DxpMsmQCountTask" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="DXPMSMQCOUNTTASK_LOG" />
		</AsyncLogger>
		<AsyncLogger name="com.epoint.dxp.kafka.task.DxpKafkaTopicPublishCountJob" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="DXPKAFKATOPICPUBLISHCOUNTJOB_LOG" />
		</AsyncLogger>
		<AsyncLogger name="com.epoint.dxp.kafka.task.DxpKafkaGroupConsumeCountJob" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="DXPKAFKAGROUPCONSUMECOUNTJOB_LOG" />
		</AsyncLogger>
		<AsyncLogger name="com.epoint.dxp.alarm.task.DxpMonitorTask" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="DXPMONITORTASK_LOG" />
		</AsyncLogger>
		<AsyncLogger name="com.epoint.dxp.alarm.task.DxpAlarmTask" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="DXPALARMTASK_LOG" />
		</AsyncLogger>
		<AsyncLogger name="com.epoint.olddxp.trigger.action.CheckTableTiggerJob" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="CHECKTABLETIGGERJOB_LOG" />
		</AsyncLogger>
		
		<!-- XxlJobExecute日志控制器 additivity指示是否遵循缺省的继承机制：若是additivity设为false，则子Logger只会在自己的appender里输出，而不会在父Logger的appender里输出 -->
		<AsyncLogger name="com.epoint.dxp.xxl.task.XxlJobExecute" level="debug"
			additivity="false" includeLocation="true">
			<AppenderRef ref="XXLJOBEXECUTE_LOG" />
		</AsyncLogger>

		<!-- sql日志控制器 -->
		<Logger name="druid.sql.Statement" level="error">
		</Logger>

		<!-- SOA日志 -->
		<Logger name="SOA" level="error">
		</Logger>

		<!-- 统一附件日志 -->
		<Logger name="epoint-attach-log" level="info">
		</Logger>

		<!-- 集群session日志控制器 -->
		<Logger name="com.epoint.core.utils.clustered" level="error">
		</Logger>

		<!-- cxf日志控制器 -->
		<Logger name="org.apache.cxf" level="error">
		</Logger>

		<!-- 安全日志控制器 -->
		<Logger name="com.epoint.frame.security" level="info">
		</Logger>

		<!-- springmvc的html页面等资源处理的日志控制器 -->
		<Logger name="org.springframework.web.servlet.resource" level="error">
		</Logger>

		<!-- springmvc的rest接口日志控制器 -->
		<Logger name="org.springframework.web.servlet.mvc.method.annotation"
			level="error">
		</Logger>

		<!-- oauth2缓存管理 -->
		<Logger name="com.epoint.oauth2.core.memory.EhCacheManagerAdapter"
			level="error">
		</Logger>

		<!-- shiro登录日志控制器 -->
		<Logger name="org.apache.shiro.authc.pam.ModularRealmAuthenticator"
			level="error">
		</Logger>
		
		<!-- xxl扫描资源日志控制器 -->
		<Logger name="com.epoint.monitor.thread.MonitorThread"
			level="error">
		</Logger>

		<!-- 统一认证（SSO） -->
		<Logger name="epoint-sso-log" level="info">
		</Logger>
		
		<!-- p6spy日志控制器 -->
		<Logger name="p6spy" level="error">
		</Logger>

		<AsyncRoot level="info" includeLocation="true">
			<AppenderRef ref="Console" />
		</AsyncRoot>
	</loggers>
</configuration>